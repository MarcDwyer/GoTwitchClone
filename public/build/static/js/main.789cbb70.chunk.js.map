{"version":3,"sources":["components/streamlist.jsx","components/nav.jsx","components/videoplayer.jsx","components/notification.jsx","components/active_streams.jsx","serviceWorker.js","index.js"],"names":["StreamList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","show","fetch","fetchData","json","dataFetch","setState","_this2","_this$state","react_default","a","createElement","className","keys","length","onClick","renderStreams","_this$state2","map","stream","index","avatar","concat","Name","key","uuid","youtubeLink","ChannelId","window","open","focus","src","alt","Component","Navbar","darkTheme","theme","total","live","values","reduce","item","isNaN","viewers","Viewers","toggle","id","VideoPlayer","theStream","console","log","prevProps","prevState","snapshot","_this$props","onStream","Likes","Dislikes","VideoID","Title","vidUrl","url","location","hostname","chatUrl","style","backgroundColor","frameBorder","color","Description","Notification","updater","styles","card","active","oldnames","name","newnames","update","_","difference","setTimeout","updateStream","ActiveStreams","toggleTheme","localStorage","setItem","JSON","stringify","dark","ls","parse","getItem","data","newData","obj","ChannelID","checker","setInterval","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","darkhover","document","documentElement","setProperty","nav_Navbar","streamlist_StreamList","videoplayer_VideoPlayer","notification_Notification","_this3","Boolean","match","ReactDOM","render","active_streams_ActiveStreams","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.789cbb70.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport default class StreamList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            list: null,\r\n            show: false\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        // fetching streamer catalog from server\r\n       const fetchData = await fetch('/streamers/all');\r\n       const dataFetch = await fetchData.json();\r\n       this.setState({list: dataFetch});\r\n    }\r\n    render() {\r\n\r\n        const { list, show } = this.state;\r\n        if (!list) return null;\r\n       return (\r\n       <div>\r\n           <div className=\"header\">\r\n        <h5 className=\"ml-2 mt-2\">Catalog <small>{Object.keys(this.state.list).length}</small></h5>\r\n        <span className=\"showmore ml-2\" onClick={() => this.setState({show: !show})}>{show ? 'Show less' : 'Show more'}</span>\r\n        </div>\r\n        <div className=\"actuallist\">\r\n        {this.renderStreams()}\r\n        </div>\r\n        </div>\r\n       );\r\n    }\r\n    renderStreams(){\r\n        const { list, show } = this.state;\r\n        return list.map((stream, index) => {\r\n            const avatar = `https://s3.us-east-2.amazonaws.com/fetchappbucket/images/${stream.Name}.jpg`;\r\n            if (!show && index >= 6) return;\r\n            return (\r\n            <div className=\"streamer\" key={uuid()}\r\n            onClick={() => {\r\n                const youtubeLink = `https://www.youtube.com/channel/${stream.ChannelId}`;\r\n                const win = window.open(youtubeLink, '_blank');\r\n                win.focus();\r\n            }}\r\n            >\r\n            <div className=\"substreamer\">\r\n            <img src={avatar} alt=\"streamimage\" className=\"ml-2\" />\r\n            <div className=\"streamname ml-2 \">\r\n            <span>{stream.Name}</span>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            );\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const Navbar = (props) => {\r\n  const darkTheme = props.theme ? 'darkTheme' : 'whiteTheme';\r\n    const total = !props.live ? '0' : Object.values(props.live).reduce((total, item) => {\r\n        if (isNaN(item).viewers) {\r\n            return;\r\n        }\r\n        total += item.Viewers;\r\n        return total\r\n    }, 0)\r\n  return (\r\n<nav className={`navbar navbar-expand-lg ${darkTheme}`}>\r\n  <span className=\"navbar-brand\">FetcherApp <i className=\"fa fa-toggle-on ml-2\" onClick={() => props.toggle()}></i></span>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <span className=\"navbar-text\">\r\n                    {`Total Viewers: ${total}`}\r\n                </span>\r\n    </div>\r\n</nav>\r\n  )\r\n};","import React, { Component } from 'react'\r\n\r\n export default class VideoPlayer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            theStream: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.live) {\r\n            console.log(\"balls\")\r\n         this.setState({theStream: Object.values(this.props.live)[0]})\r\n        }\r\n    }\r\n     componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { live, onStream } = this.props;\r\n        const { theStream } = this.state;\r\n       // const { theStream } = this.state\r\n       \r\n         if (onStream && !live[onStream]) {\r\n            this.setState({theStream: Object.values(live)[0]})\r\n        }\r\n       else if (prevProps.onStream != this.props.onStream) {\r\n            this.setState({ theStream: live[onStream] })\r\n        }\r\n    }\r\n\r\n     render() {\r\n        console.log(this.state)\r\n        console.log(this.props)\r\n        const { theStream } = this.state\r\n\r\n        if (!theStream) return null\r\n        const { Likes, Dislikes, VideoID, Viewers, Title } = theStream\r\n\r\n        const darkTheme = this.props.theme ? 'darkTheme' : 'whiteTheme';\r\n        const vidUrl = `https://www.youtube.com/embed/${VideoID}?autoplay=1&amp;showinfo=0&amp;modestbranding=1&amp;enablejsapi=1&amp`;\r\n        const url = window.location.hostname;\r\n        const chatUrl = `https://www.youtube.com/live_chat?v=${VideoID}&embed_domain=${url}`;\r\n\r\n        \r\n        return (\r\n\r\n            <div className=\"contentmain\" style={!this.props.theme ? {backgroundColor: '#D6D6D6'} : {backgroundColor: 'black'}}>\r\n                <div className=\"videoparent\">\r\n                    <div className={`videonav ${darkTheme}`}>\r\n                        <div className=\"marginnav\">\r\n                            <span><i className=\"fa fa-thumbs-up\"></i> { Likes }</span>\r\n                            <span><i className=\"fa fa-thumbs-down ml-4\"></i> { Dislikes }</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`margincontent ${darkTheme}`}>\r\n                        <div className=\"actualvideo\">\r\n                            <iframe src={vidUrl} frameBorder=\"0\" />\r\n                        </div>\r\n                        <div className=\"topcontent\">\r\n                            <div className=\"videocontent mt-2\">\r\n                                <h4 className=\"ml-2\">{ Title }</h4>\r\n                                <span><i style={{color: 'red'}} className=\"fa fa-circle mr-2\" />{ Viewers } Viewers</span>\r\n                            </div>\r\n                            <div className=\"body ml-2 mb-2\">\r\n                                <p>{theStream.Description}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatter\">\r\n                    <iframe src={chatUrl} frameBorder=\"0\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\nimport uuid from 'uuid'\r\n\r\nexport default class Notification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updater: []\r\n        }\r\n        this.styles = {\r\n            card: {color: 'white'}\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // finding the difference between the previous streamers and the current streamers, seeing if there is a difference (thank you lodash)\r\n        if (prevProps.active !== this.props.active) {\r\n            const { active } = this.props;\r\n\r\n            const oldnames = Object.values(prevProps.active).map(stream => stream.name)\r\n            const newnames = Object.values(active).map(stream => stream.name);\r\n\r\n            const update = _.difference(newnames, oldnames);\r\n            this.setState({updater: update})\r\n            setTimeout(() => {\r\n                this.setState({updater: []});\r\n            }, 8500)\r\n         }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {updater} = this.state;\r\n        if (!updater.length > 0) {\r\n            return (\r\n                <div className='notify' style={this.styles.card}><div className=\"flexme\"><span>No difference...</span></div></div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"notify act\" style={this.styles.card}>{this.updateStream()}</div>\r\n        );\r\n    }\r\n    updateStream() {\r\n        const { updater } = this.state;\r\n        return updater.map(stream => {\r\n            console.log(stream)\r\n            return (\r\n                <div key={uuid()} className=\"flexme\">\r\n                    <span>{stream} is online!</span>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport StreamList from './streamlist';\r\nimport { Navbar } from './nav';\r\nimport VideoPlayer from './videoplayer';\r\nimport Notifications from './notification'\r\nimport uuid from 'uuid';\r\n\r\nexport default class ActiveStreams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            live: null,\r\n            stream: null,\r\n            dark: true\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const ls = JSON.parse(localStorage.getItem('dark'));\r\n        // setting theme\r\n        if (typeof ls === 'boolean') {\r\n            this.setState({dark: ls})\r\n        }\r\n        // fetching streamer data\r\n        const fetchData = await fetch('/streamers/live');\r\n        const data = await fetchData.json();\r\n        const newData = data.reduce((obj, item) => {\r\n            obj[item.ChannelID] = item\r\n            return obj\r\n        },{})\r\n        this.setState({live: newData});\r\n\r\n        // streamer data updates, local state is set as an object\r\n        this.checker = setInterval(async () => {\r\n\r\n            const fetchData = await fetch('/streamers/live');\r\n            const data = await fetchData.json();\r\n            const newData = data.reduce((obj, item) => {\r\n                obj[item.ChannelID] = item\r\n                return obj\r\n            },{})\r\n            this.setState({live: newData});\r\n        }, 35000);\r\n    }\r\n    // setting root variables to match theme\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { dark } = this.state;\r\n        if (dark !== prevState.dark) {\r\n            const darkhover = dark ? '#404040' : '#D6D6D6';\r\n           document.documentElement.style.setProperty('--streamhover', darkhover);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { live } = this.state;\r\n        console.log(this.state)\r\n        if (!live) return null;\r\n\r\n        const darkTheme = this.state.dark ? 'darkTheme' : 'whiteTheme';\r\n\r\n        return (\r\n            <div>\r\n                <Navbar toggle={this.toggleTheme} theme={this.state.dark} live={live} />\r\n            <div className={`maindiv ${darkTheme}`}>\r\n            <div className=\"navigator\">\r\n                <div className=\"streamlist active\">\r\n                <h5 className=\"online ml-2\">Online <small>{Object.keys(this.state.live).length}</small></h5>\r\n\r\n                    <div className=\"actuallist\">\r\n                    {this.renderStreams()}\r\n                    </div>\r\n                    <StreamList theme={this.state.dark} />\r\n                </div>\r\n            </div>\r\n       <VideoPlayer onStream={this.state.stream} live={this.state.live} theme={this.state.dark} />\r\n                <Notifications active={this.state.live} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    renderStreams() {\r\n        const { live } = this.state;\r\n        return Object.values(live).map(stream => {\r\n            const avatar = `https://s3.us-east-2.amazonaws.com/fetchappbucket/images/${stream.Name}.jpg`;\r\n            const { Viewers } = stream;\r\n            return (\r\n                <div className=\"streamer mt-1\" key={uuid()} onClick={() => this.setState({stream: stream.ChannelID})}>\r\n                <div className=\"substreamer\">\r\n                <img src={avatar} alt=\"streamimage\" className=\"ml-2\" />\r\n                <div className=\"streamname ml-2 \">\r\n                <span>{stream.Name}</span>\r\n                <span><small>is Playing IRL</small></span>\r\n                </div>\r\n                <span className=\"marginme\"><small>{Viewers} viewers</small></span>  \r\n                </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    toggleTheme = () => {\r\n        // saving theme setting to localstorage\r\n        localStorage.setItem('dark', JSON.stringify(!this.state.dark))\r\n        this.setState({dark: !this.state.dark})\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ActiveList from './components/active_streams';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <div>\n    <ActiveList />\n    </div>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}